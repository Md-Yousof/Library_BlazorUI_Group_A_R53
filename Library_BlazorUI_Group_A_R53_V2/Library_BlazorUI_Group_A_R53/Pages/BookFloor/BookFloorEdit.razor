@page "/edit-bookFloor/{id}"
@using Library_BlazorUI_Group_A_R53.Services
@using Library_BlazorUI_Group_A_R53.Data.Models

<div class="container">
<div class="row">
    <div class="col-lg-9">
        <h2>Edit BookFloor</h2>
    </div>

    <div class="col-lg-3 text-right">
        <a href="/bookfloor" role="button" class="btn btn-secondary btn-sm">Back to List</a>
    </div>
</div>

<!-- BookFloor editing form -->
<form>
    <div class="form-group">
        <label for="brandName">BookFloor Name:</label>
        <input type="text" class="form-control" id="brandName" @bind="editedBookFloor.BookFloorName">
    </div>

    <div class="form-check">
        <label for="isActive">Active:</label>
        <input type="checkbox" class="form-check-input" id="isActive" @bind="editedBookFloor.IsActive">
    </div>
    <button type="button" class="btn btn-primary" @onclick="UpdateBookFloor">Update</button>
</form>
</div>


@code {
    private BookFloor editedBookFloor = new BookFloor();

    [Parameter]
    public string id { get; set; }

    [Inject]
    private IBookFloorService BookFloorService { get; set; }

    [Inject]
    private NavigationManager NavigationManager { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (int.TryParse(id, out int bookFloorId))
        {
            editedBookFloor = await BookFloorService.GetBookFloorById(bookFloorId);
        }
    }

    private async Task UpdateBookFloor()
    {
        try
        {
            await BookFloorService.UpdateBookFloor(editedBookFloor);
            NavigationManager.NavigateTo("/bookfloor");
        }
        catch (Exception ex)
        {
            // Handle any errors or show error messages to the user
            Console.WriteLine($"Error updating BookFloor: {ex.Message}");
        }
    }
}
